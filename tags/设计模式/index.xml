<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on failcom</title>
    <link>https://failcom.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on failcom</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 13 Dec 2019 21:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://failcom.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式 | 单例模式</title>
      <link>https://failcom.github.io/post/Singleton/</link>
      <pubDate>Fri, 13 Dec 2019 21:00:00 +0800</pubDate>
      
      <guid>https://failcom.github.io/post/Singleton/</guid>
      <description>介绍 作用 保证一个类仅有一个实例，并提供一个访问它的全局访问点。 注意 单例类只能有一个实例。 单例类必须自己创建自己的唯一实例。 单例类必须给所有其他对象提供这一实例。 优点 在内存里只有一个实例，减少了内存的开销，尤其是频繁的创建和销毁实例。 避免对资源的多重占用。 缺点 没有接口，不能继承，与</description>
    </item>
    
  </channel>
</rss>